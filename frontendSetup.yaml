# yaml = yet another markup language 

socket_io:
  initialization: "Establish WebSocket connection to the server using Socket.io (const socket = io();)."

chess_game:
  initialization: "Create an instance of the Chess class from the chess.js library (const chess = new Chess();)."

dom_elements:
  chessboard: "Select the HTML element with the class 'chessboard' to render the chessboard (const boardElement = document.querySelector('#chessboard');)."

drag_and_drop:
  description: "Implement drag and drop functionality for moving chess pieces on the board."
  conditions:
    - "Pieces are draggable only if it's the player's turn."
    - "Event listeners for drag start, drag end, drag over, and drop events are attached."

rendering_board:
  description: "Generate the HTML representation of the chessboard based on the current game state."
  steps:
    - "Iterate over the board array and create square elements for each cell."
    - "Create piece elements for occupied squares and append them to square elements."
    - "Flip the board for the black player's view."

handling_moves:
  description: "Handle player moves when dragging and dropping pieces."
  steps:
    - "Construct a move object containing the source and target squares in algebraic notation."
    - "Emit a 'move' event to the server via Socket.io."

unicode_chess_pieces:
  description: "Return Unicode characters representing chess pieces based on their type."

socket_io_event_handlers:
  description: "Listen for various events from the server and update the game state accordingly."
  events:
    - "Player role assignment"
    - "Spectator role assignment"
    - "Board state updates"
    - "Opponent moves"

initial_rendering:
  description: "Call the renderBoard function initially to render the initial state of the chessboard."
